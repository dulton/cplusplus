#
#  Copyright (c) 2007 by Spirent Communications Inc.
#  All Rights Reserved.
#
#  This software is confidential and proprietary to Spirent Communications Inc.
#  No part of this software may be reproduced, transmitted, disclosed or used
#  in violation of the Software License Agreement without the expressed
#  written consent of Spirent Communications Inc.
#
# $Id: //TestCenter/p2.30_dev_ifmgr/content/traffic/l2l3/il/Generator/Learning/SConscript#1 $
#

import os

Import('*')

sources = [
    'l4l7Base_Autogen_port_server.cpp',
    'l4l7Base_1_port_server.cpp',
    'EndpointPairEnumerator.cpp',
    'LoadPattern.cpp',
    'LoadPhase.cpp',
    'LoadProfile.cpp',
    'LoadProfileNotifier.cpp',
    'LoadScheduler.cpp',
    'LoadUtils.cpp',
    'RateBasedLoadStrategy.cpp',
    'StaticLoadStrategy.cpp',
    ]


xcginput = [ 
    ('l4l7Base_Autogen_port_server.h', '#content/traffic/l4l7/idl/l4l7Base_Autogen.idl'),
    ('l4l7Base_Autogen_port_server.cpp', '#content/traffic/l4l7/idl/l4l7Base_Autogen.idl'),
    ('l4l7Base_1_port_server.h', '#content/traffic/l4l7/idl/l4l7Base_1.idl'),
    ('l4l7Base_1_port_server.cpp', '#content/traffic/l4l7/idl/l4l7Base_1.idl'),
    ]

idl_files = [ 'l4l7Base_1.idl',
              'l4l7Base_Autogen.idl',
              ]

e = env.Clone()

# add dependencies on autogenerated header files
utils.xcgSetupAutogenDependencies(e, xcginput, sources)

for file, idl_path in xcginput :
    e.XCGBuilder(file, idl_path)

e['CPPPATH'] += [ '.',
                  '#content/traffic/l4l7/il',
                  '#framework/il/common/lib', 
                  ]

e['LIBS'] += [ 'ACE',
               'mps',
               'vif',
               'ilprotocol', 
               'phxlog', 
               'phxexception', 
               'phxerrno',
               'm',
               ]

libname = 'l4l7base'

lib = e.SharedLibrary(target=conf['lib_dir']+'/'+libname, source=sources)
utils.installSharedLib(e, lib)

def install_files(installdir, flist, srcdir=""):
    for f in flist:
        utils.install(e, e.Command(os.path.join(installdir, f), os.path.join(srcdir, f), "cp -f $SOURCE $TARGET"))

install_files(conf['idl_blddir'], idl_files, os.path.join(conf['top_dir'], 'content', 'traffic', 'l4l7', 'idl'))

if env['utest'] :
    utest = SConscript(os.path.join('utest', 'SConscript'))
    utils.coverageReport(e, utest)

# Local Variables:
# mode:python
# End:
# vim: syntax=python
